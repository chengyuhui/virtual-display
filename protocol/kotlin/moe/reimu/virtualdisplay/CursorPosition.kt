// automatically generated by the FlatBuffers compiler, do not modify

package moe.reimu.virtualdisplay

import com.google.flatbuffers.BaseVector
import com.google.flatbuffers.BooleanVector
import com.google.flatbuffers.ByteVector
import com.google.flatbuffers.Constants
import com.google.flatbuffers.DoubleVector
import com.google.flatbuffers.FlatBufferBuilder
import com.google.flatbuffers.FloatVector
import com.google.flatbuffers.LongVector
import com.google.flatbuffers.StringVector
import com.google.flatbuffers.Struct
import com.google.flatbuffers.Table
import com.google.flatbuffers.UnionVector
import java.nio.ByteBuffer
import java.nio.ByteOrder
import kotlin.math.sign

@Suppress("unused")
@kotlin.ExperimentalUnsignedTypes
class CursorPosition : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : CursorPosition {
        __init(_i, _bb)
        return this
    }
    val x : Int
        get() {
            val o = __offset(4)
            return if(o != 0) bb.getInt(o + bb_pos) else 0
        }
    val y : Int
        get() {
            val o = __offset(6)
            return if(o != 0) bb.getInt(o + bb_pos) else 0
        }
    val visible : Boolean
        get() {
            val o = __offset(8)
            return if(o != 0) 0.toByte() != bb.get(o + bb_pos) else false
        }
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_23_1_21()
        fun getRootAsCursorPosition(_bb: ByteBuffer): CursorPosition = getRootAsCursorPosition(_bb, CursorPosition())
        fun getRootAsCursorPosition(_bb: ByteBuffer, obj: CursorPosition): CursorPosition {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun createCursorPosition(builder: FlatBufferBuilder, x: Int, y: Int, visible: Boolean) : Int {
            builder.startTable(3)
            addY(builder, y)
            addX(builder, x)
            addVisible(builder, visible)
            return endCursorPosition(builder)
        }
        fun startCursorPosition(builder: FlatBufferBuilder) = builder.startTable(3)
        fun addX(builder: FlatBufferBuilder, x: Int) = builder.addInt(0, x, 0)
        fun addY(builder: FlatBufferBuilder, y: Int) = builder.addInt(1, y, 0)
        fun addVisible(builder: FlatBufferBuilder, visible: Boolean) = builder.addBoolean(2, visible, false)
        fun endCursorPosition(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
